PORT=8080
HTTPS_ENABLED=false
HTTPS_CERT_PATH=/certs/app-8080.crt
HTTPS_KEY_PATH=/certs/app-8080.key
# Para despliegues con docker-compose puedes usar DB_HOST=db
DB_HOST=localhost
DB_PORT=5432
DB_USER=Horizonst_user
DB_PASSWORD=20025@BLELoRa
DB_NAME=horixonst
# Credenciales con privilegios suficientes para crear la base de datos y el rol si no existen
DB_ROOT_USER=Horizonst_user
DB_ROOT_PASSWORD=20025@BLELoRa
DB_ROOT_DATABASE=postgres
# Valores admitidos: on-create, on-missing, always, never
DB_BOOTSTRAP_SCHEMA=on-create
# Si se deja en blanco, usará sql/schema.sql relativo al proyecto
DB_SCHEMA_PATH=
# Credenciales iniciales para pgAdmin 4 cuando se ejecuta vía Docker Compose
PGADMIN_DEFAULT_EMAIL=admin@horizonst.com.es
PGADMIN_DEFAULT_PASSWORD=admin1234
PGADMIN_ENABLE_TLS=False
PGADMIN_PORT=5050
PGADMIN_LISTEN_PORT=80
PGADMIN_PROXY_X_FORWARDED_PROTO=https
# No añadas comillas manualmente a los valores PGADMIN_PROXY_X_FORWARDED_*; docker-compose ya las inserta para la sintaxis de pgAdmin.
# Define el host y el path si Nginx hace de reverse proxy con cabeceras X-Forwarded
PGADMIN_PROXY_X_FORWARDED_HOST=
PGADMIN_PROXY_X_FORWARDED_PATH=/pgadmin
PGADMIN_PREFERRED_URL_SCHEME=https
# Usa `mqtt` cuando la aplicación se ejecute junto al broker incluido en docker-compose
MQTT_HOST=horizonst.com.es
MQTT_PORT=1883
MQTT_USER=mqtt@user
MQTT_PASS=20025@BLELoRa
MQTT_CLIENT_PREFIX=acces_control_server_
MQTT_KEEPALIVE=60
MQTT_RECONNECT_PERIOD=1000
MQTT_PROTOCOL_ID=
MQTT_PROTOCOL_VERSION=4
MQTT_CLEAN=true
MQTT_ENCODING=utf8
MQTT_CONNECT_TIMEOUT=10000
JWT_SECRET=supersecretjwtkey
